# Generated by Django 5.1.5 on 2025-02-07 02:22

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Video",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(default=datetime.date.today)),
                ("video_title", models.CharField(max_length=500)),
                ("timestamp", models.CharField(max_length=50)),
                ("video_id", models.CharField(max_length=255)),
                ("comment_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "org_decision",
                    models.CharField(
                        choices=[
                            ("Stroke", "Stroke"),
                            ("Let", "Let"),
                            ("No Let", "No Let"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_posted", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="YoutubeQuota",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(default=django.utils.timezone.now, unique=True),
                ),
                ("quota", models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Result",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_votes", models.IntegerField(default=0)),
                ("stroke", models.IntegerField(default=0)),
                ("let", models.IntegerField(default=0)),
                ("no_let", models.IntegerField(default=0)),
                (
                    "video",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="vote.video"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VoteUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("youtube_user_id", models.CharField(max_length=255)),
                (
                    "vote",
                    models.CharField(
                        choices=[
                            ("Stroke", "Stroke"),
                            ("Let", "Let"),
                            ("No Let", "No Let"),
                        ],
                        max_length=20,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "video",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="vote.video"
                    ),
                ),
            ],
            options={
                "unique_together": {("video", "youtube_user_id")},
            },
        ),
    ]
